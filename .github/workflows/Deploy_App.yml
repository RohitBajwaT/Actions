name: 'Deploy App'
#description: 'Workflow to deploy the App in all environment.'
#author: 'TIBCO Software'
  
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev|sit|uat|prod'
#outputs:
#  time:
#   description: 'the greeting time'
         
env:
  WF_ENV: workflow env variable
  
jobs:
  set-variables:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      vars: ${{ steps.variables.outputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: read env
        id: variables
        uses: ./.github/actions/setvars
        with:
          path: ./.github/variables/application.env
      - name: validate
        run: |
          if [ ${{ github.event.inputs.environment }} = "dev" ] || [ ${{ github.event.inputs.environment }} = "sit" ] || [ ${{ github.event.inputs.environment }} = "uat" ] || [ ${{ github.event.inputs.environment }} = "prod" ]
          then
          echo "You are deploying to : ${{ github.event.inputs.environment }}"
          else
          echo "You have enetered incorrect environment : ${{ github.event.inputs.environment }}"
          echo "Please provide the correct environment to deploy : dev|sit|uat|prod"
          exit 1
          fi
  build:
    runs-on: ubuntu-latest
    needs: [set-variables]
    env: 
      vars: ${{ needs.set-variables.outputs.vars }}
    steps:
      - name: Checkout Common
        uses: actions/checkout@v2
        with:
          repository: RohitBajwaT/common
          ref: v1.0
          path: ./Common
          token: ${{ secrets.TOK }}
      - name: SonarQube Code Analysis
        run : |
          echo "Variable 1: ${{ fromJSON(env.vars).application }}"
          echo "Variable 2: ${{ fromJSON(env.vars).environment }}" 
          echo "Completed the sonarqube analysis"
      - name: maven build
        run : |
          echo "Build completed"        
        env:
          OC_SERVER: ${{ secrets.OC_SERVER }}
          SONAR_SERVER: ${{ secrets.SONAR_SERVER }}
          SUB: DEV

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    needs: [set-variables, build]
    env: ${{ fromJSON(needs.set-variables.outputs.vars) }}
    steps:

      - name : deploy
        run: |
          echo $OC_PROJECT 
          echo "Variable 1: ${{ env.application }}"
          echo "Deploy to ${{ github.event.inputs.environment }} completed"
        env:
          OC_PROJECT: ${{ secrets.OC_PROJECT }}
